0:

create database duombomzynas;

1:

create table Klientai (
`kliento id` int primary key auto_increment,
`vardas` varchar(250) NOT NULL,
`pavarde` varchar(250) NOT NULL,
`miestas` varchar(250) NOT NULL
);

2:

create table Uzsakymai (
`uzsakymo_id` int primary key auto_increment,
`uzsakymo_kaina` decimal(20, 2) NOT NULL,
`uzsakymo_data` date NOT NULL,
`kliento_id` int NOT NULL,
 foreign key (`kliento_id`) references Klientai(`kliento_id`)
);

3:

INSERT INTO Klientai (kliento_id, vardas, pavarde, miestas)
VALUES
(1, 'Helge', 'Wotton', 'Murom'),
(2, 'Annie', 'Kliemke', 'Craigavon'),
(3, 'Freeland', 'Guyan', 'Bojen Kulon'),
(4, 'Raine', 'Garmston', 'Mlonggo'),
(5, 'Marne', 'Hardingham', 'København'),
(6, 'Jesselyn', 'Walton', 'Tapado'),
(7, 'Clotilda', 'Gorham', 'Dřiteň'),
(8, 'Woodrow', 'Havelin', 'Jiblah'),
(9, 'Averill', 'Bartkowiak', 'Shamboyacu'),
(10, 'Simeon', 'Hinckes', 'Dumbéa'),
(11, 'Morgan', 'McIlwrick', 'Payao'),
(12, 'Nadia', 'Tow', 'Färgelanda'),
(13, 'Bibbie', 'Avrahm', 'Hangkou'),
(14, 'Dedie', 'Hanson', 'Hikari'),
(15, 'Lon', 'Kennington', 'Pattani'),
(16, 'Modestine', 'Shepeard', 'El Corozo'),
(17, 'Edyth', 'Quaif', 'Gourma Rharous'),
(18, 'Walden', 'Okker', 'Vagos'),
(19, 'Jud', 'Darbey', 'Cibatuireng'),
(20, 'Zed', 'Scheffler', 'Otan Aiyegbaju'),
(21, 'Burtie', 'Adamec', 'Kolsko'),
(22, 'Gerri', 'Helm', 'Badian'),
(23, 'Tod', 'Bloyes', 'Athmuqam'),
(24, 'Ketty', 'Till', 'El Caño'),
(25, 'Ardine', 'Stobbs', 'Iecava'),
(26, 'Alyce', 'Vaughten', 'Zarechnyy'),
(27, 'Madella', 'Ciccarelli', 'Al Jarādīyah'),
(28, 'Aretha', 'Danielou', 'Pervoural’sk'),
(29, 'Stanton', 'Daviot', 'Pag'),
(30, 'Raymund', 'Geater', 'Sayang Lauq'),
(31, 'Miranda', 'Watkinson', 'Nossa Senhora do Socorro'),
(32, 'Katy', 'Woodburn', 'Yisa'),
(33, 'Ferd', 'Carless', 'Esmoriz'),
(34, 'Ingar', 'Whipple', 'Guadalupe'),
(35, 'Andriana', 'Berthomier', 'Cacaopera'),
(36, 'Mycah', 'Eldridge', 'Melville'),
(37, 'Tisha', 'Thurling', 'Robonkon'),
(38, 'Joseph', 'Dadd', 'Sinargalih'),
(39, 'Kristy', 'Duffitt', 'Jugantang'),
(40, 'Nancee', 'Dysert', 'Sawara'),
(41, 'Estella', 'Abade', 'Araçoiaba da Serra'),
(42, 'Clemente', 'Cubbon', 'Batumi'),
(43, 'Rik', 'Eardley', 'Drohiczyn'),
(44, 'Florrie', 'Timlin', 'Leuwidamar'),
(45, 'Layla', 'Martin', 'Blangkejeren'),
(46, 'Borden', 'Rapinett', 'Pittsburgh'),
(47, 'Sharon', 'Denne', 'Bologna'),
(48, 'Kristo', 'Stratten', 'Girey'),
(49, 'Friedrich', 'Ing', 'Campinho'),
(50, 'Chandra', 'Meneer', 'Piduhe');

INSERT INTO Uzsakymai (uzsakymo_id, uzsakymo_kaina, uzsakymo_data, kliento_id)
VALUES
(1, 7.48, '2023-04-04', 1),
(2, 50.84, '2022-02-25', 2),
(3, 45.16, '2019-07-12', 3),
(4, 45.45, '2023-03-14', 4),
(5, 52.45, '2021-01-14', 5),
(6, 46.03, '2022-03-03', 6),
(7, 19.71, '2023-06-12', 7),
(8, 62.24, '2019-07-24', 8),
(9, 3.74, '2023-10-11', 9),
(10, 77.29, '2020-12-09', 10),
(11, 14.72, '2023-10-14', 11),
(12, 70.29, '2021-03-06', 12),
(13, 33.83, '2022-03-14', 13),
(14, 44.99, '2023-07-23', 14),
(15, 19.41, '2023-10-31', 15),
(16, 56.35, '2023-02-18', 16),
(17, 35.13, '2023-03-04', 17),
(18, 3.0, '2019-08-10', 18),
(19, 19.52, '2023-07-31', 19),
(20, 70.07, '2021-01-27', 20),
(21, 22.09, '2022-03-10', 21),
(22, 5.97, '2023-11-06', 22),
(23, 18.0, '2019-09-28', 23),
(24, 72.13, '2023-09-06', 24),
(25, 2.23, '2023-05-01', 25),
(26, 41.11, '2023-02-21', 26),
(27, 10.9, '2022-11-01', 27),
(28, 41.98, '2022-12-15', 28),
(29, 22.08, '2023-06-16', 29),
(30, 26.88, '2019-09-27', 30),
(31, 8.9, '2022-12-22', 31),
(32, 78.91, '2023-06-22', 32),
(33, 20.28, '2023-07-28', 33),
(34, 48.65, '2023-07-14', 34),
(35, 76.47, '2023-06-18', 35),
(36, 76.01, '2023-02-14', 36),
(37, 20.64, '2023-02-02', 37),
(38, 47.52, '2023-10-09', 38),
(39, 7.63, '2023-08-25', 39),
(40, 22.9, '2023-03-31', 40),
(41, 56.07, '2023-05-14', 41),
(42, 3.34, '2023-01-01', 42),
(43, 49.48, '2023-11-03', 43),
(44, 64.94, '2023-02-11', 44),
(45, 62.28, '2023-03-08', 45),
(46, 58.59, '2023-03-23', 46),
(47, 37.52, '2023-04-21', 47),
(48, 77.96, '2019-01-05', 48),
(49, 73.01, '2023-03-26', 49),
(50, 60.5, '2023-06-30', 50);


4:

select *
from klientai
left join uzsakymai
on klientai.kliento_id = uzsakymai.uzsakymo_id
order by klientai.kliento_id;

5:

SELECT *
FROM klientai
LEFT JOIN uzsakymai ON klientai.kliento_id = uzsakymai.uzsakymo_id
WHERE klientai.kliento_id IS NULL
ORDER BY klientai.kliento_id;

6:

SELECT 
    klientai.vardas,
    klientai.pavarde,
    COUNT(uzsakymai.uzsakymo_id) AS bendras_uzsakymu_skaicius
FROM klientai
LEFT JOIN uzsakymai ON klientai.kliento_id = uzsakymai.kliento_id
GROUP BY klientai.kliento_id, klientai.vardas, klientai.pavarde;

7:

SELECT 
    klientai.vardas,
    klientai.pavarde,
    COUNT(uzsakymai.uzsakymo_id) AS bendras_uzsakymu_skaicius
FROM klientai
LEFT JOIN uzsakymai ON klientai.kliento_id = uzsakymai.kliento_id
GROUP BY klientai.kliento_id, klientai.vardas, klientai.pavarde
HAVING COUNT(uzsakymai.uzsakymo_id) >= 3;

8:

update klientai mainClient
join klientai otherClient
on mainClient.pavarde = otherClient.pavarde and mainClient.kliento_id <> otherClient.kliento_id
set mainClient.pavarde = UPPER(mainClient.pavarde);

9:

SELECT
    uzsakymai.uzsakymo_id,
    uzsakymai.kliento_id,
    uzsakymai.uzsakymo_kaina
FROM uzsakymai
WHERE uzsakymai.uzsakymo_kaina > 50;

10:

SELECT
klientai.kliento_id,
klientai.vardas,
klientai.pavarde,
coalesce(uzsakymai.uzsakymo_id, 'neturi uzsakymu') as uzsakymo_id
from klientai
left join uzsakymai on klientai.kliento_id = uzsakymai.kliento_id;

11:

SELECT
    klientai.kliento_id,
    klientai.vardas,
    klientai.pavarde,
    max(uzsakymai.uzsakymo_id) as brangiausias_uzsakymas,
    max(uzsakymai.uzsakymo_kaina) as brangiausios_suma
    from klientai
    left join uzsakymai on klientai.kliento_id = uzsakymai.kliento_id
    group by klientai.kliento_id, klientai.vardas, klientai.pavarde;

12:

elect
klientai.vardas,
klientai.pavarde,
uzsakymai.uzsakymo_data
from klientai
join uzsakymai on klientai.kliento_id = uzsakymai.kliento_id
where year(uzsakymai.uzsakymo_data) < 2020;

13:

select
klientai.vardas,
klientai.pavarde,
uzsakymai.uzsakymo_kaina,
if(uzsakymai.uzsakymo_kaina > 50, 'dovana!', null) as pristatymas
from klientai
left join uzsakymai on klientai.kliento_id = uzsakymai.kliento_id
order by pristatymas desc;

14:

select
klientai.miestas,
count(uzsakymai.uzsakymo_id) as uzsakymu_kiekis
from klientai
left join uzsakymai on klientai.kliento_id = uzsakymai.kliento_id
group by klientai.miestas 
order by uzsakymu_kiekis desc;